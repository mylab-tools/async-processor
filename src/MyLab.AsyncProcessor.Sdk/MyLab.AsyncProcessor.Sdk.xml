<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyLab.AsyncProcessor.Sdk</name>
    </assembly>
    <members>
        <member name="T:MyLab.AsyncProcessor.Sdk.DataModel.ChangeStatusCallbackMessage">
            <summary>
            Contains info about request status changes
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ChangeStatusCallbackMessage.RequestId">
            <summary>
            Request identifier
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ChangeStatusCallbackMessage.NewBizStep">
            <summary>
            Not null if biz step changed
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ChangeStatusCallbackMessage.NewProcessStep">
            <summary>
            Not null if process step changed
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ChangeStatusCallbackMessage.OccurredError">
            <summary>
            Not null if there was processing error
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ChangeStatusCallbackMessage.ResultObjectJson">
            <summary>
            Not null if processing result is ready and it is an object
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ChangeStatusCallbackMessage.ResultBin">
            <summary>
            Not null if processing result is ready and it is a binary array
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.DataModel.CreateRequest">
            <summary>
            Contains request parameters
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.CreateRequest.ProcRouting">
            <summary>
            Defines queue routing to send message to processor
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.CreateRequest.CallbackRouting">
            <summary>
            Defines queue routing to send callback messages through callback exchange
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.CreateRequest.Content">
            <summary>
            Request content
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.DataModel.ProcessingError">
            <summary>
            Contains processing error details
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ProcessingError.BizMessage">
            <summary>
            User friendly business level message
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ProcessingError.TechMessage">
            <summary>
            Technical level message. e.g. exception message.
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ProcessingError.TechInfo">
            <summary>
            Technical level description. e.g. exception stack trace.
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.ProcessingError.ErrorId">
            <summary>
            Literal error identifier
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.DataModel.QueueRequestMessage">
            <summary>
            Describes queue message that contains request details
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.QueueRequestMessage.Id">
            <summary>
            Request identifier
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.DataModel.QueueRequestMessage.Content">
            <summary>
            Request content
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.ExceptionExtensions">
            <summary>
            Extensions for <see cref="T:System.Exception"/>
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.ExceptionExtensions.ToProcessingError(System.Exception,System.String,System.String)">
            <summary>
            Converts an exception to <see cref="T:MyLab.AsyncProcessor.Sdk.DataModel.ProcessingError"/>
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi">
            <summary>
            Async processor API contract
            </summary>
        </member>
        <member name="F:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.ContractKey">
            <summary>
            Contract key
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.CreateAsync(MyLab.AsyncProcessor.Sdk.DataModel.CreateRequest)">
            <summary>
            Creates new request
            </summary>
            <param name="request">request data</param>
            <returns>new request identifier</returns>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.GetStatusAsync(System.String)">
            <summary>
            Gets request status
            </summary>
            <param name="id">request id</param>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.UpdateBizStepAsync(System.String,System.String)">
            <summary>
            Update business level step
            </summary>
            <param name="id">request id</param>
            <param name="bizStep">step identifier</param>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.CompleteWithErrorAsync(System.String,MyLab.AsyncProcessor.Sdk.DataModel.ProcessingError)">
            <summary>
            Sets error for request status and complete request
            </summary>
            <param name="id">request id</param>
            <param name="error">error description</param>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.MakeRequestProcessing(System.String)">
            <summary>
             Sets 'Processing' as value of processing step 
            </summary>
            <param name="id">request id</param>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.MakeRequestCompleted(System.String)">
            <summary>
             Sets 'Completed' as value of processing step 
            </summary>
            <param name="id">request id</param>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.CompleteWithObjectResultAsync(System.String,System.Object)">
            <summary>
            Sets object as result and complete request
            </summary>
            <param name="id">request id</param>
            <param name="content">object-content</param>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.CompleteWithBinaryResultAsync(System.String,System.Byte[])">
            <summary>
            Sets bytes as result and complete request
            </summary>
            <param name="id">request id</param>
            <param name="content">bytes</param>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.GetObjectResult``1(System.String)">
            <summary>
            Gets request result as object
            </summary>
            <typeparam name="T">object type</typeparam>
            <param name="id">request identifier</param>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.IAsyncProcessorRequestsApi.GetBinResult(System.String)">
            <summary>
            Gets request result as binary
            </summary>
            <param name="id">request identifier</param>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.Processor.AsyncProcessorOptions">
            <summary>
            Contains AsyncProcessor config options
            </summary>
        </member>
        <member name="P:MyLab.AsyncProcessor.Sdk.Processor.AsyncProcessorOptions.Queue">
            <summary>
            Queue name which is source of request-messages
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.Processor.AsyncProcIntegration">
            <summary>
            Extension for integration to app
            </summary>
        </member>
        <member name="F:MyLab.AsyncProcessor.Sdk.Processor.AsyncProcIntegration.DefaultConfigSection">
            <summary>
            Default configuration section name
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.AsyncProcIntegration.AddAsyncProcessing``2(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.Configuration.IConfiguration,System.String)">
            <summary>
            Adds AsyncProcessor logic
            </summary>
            <typeparam name="TRequest">request type</typeparam>
            <typeparam name="TLogic">processing logic</typeparam>
            <param name="services">application services</param>
            <param name="config">application configuration</param>
            <param name="configSectionName">configuration section name. <see cref="F:MyLab.AsyncProcessor.Sdk.Processor.AsyncProcIntegration.DefaultConfigSection"/> by default</param>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.Processor.IAsyncProcessingLogic`1">
            <summary>
            Performs request processing
            </summary>
            <typeparam name="T">Request type</typeparam>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.IAsyncProcessingLogic`1.ProcessAsync(`0,MyLab.AsyncProcessor.Sdk.Processor.IProcessingOperator)">
            <summary>
            Processes request
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.Processor.InterruptConsumingException">
            <summary>
            Throw to interrupt message consuming
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.InterruptConsumingException.#ctor">
            <summary>
            Initializes a new instance of <see cref="T:MyLab.AsyncProcessor.Sdk.Processor.InterruptConsumingException"/>
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.Processor.IProcessingOperator">
            <summary>
            Provides abilities for processing reporting
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.IProcessingOperator.SetBizStepAsync(System.String)">
            <summary>
            Sets business level step fro request
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.IProcessingOperator.CompleteWithErrorAsync(MyLab.AsyncProcessor.Sdk.DataModel.ProcessingError)">
            <summary>
            Report about error and set request completed
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.IProcessingOperator.CompleteWithResultAsync(System.Object)">
            <summary>
            Save result object and set request completed
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.IProcessingOperator.CompleteWithResultAsync(System.Byte[])">
            <summary>
            Save binary result and set request completed
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.IProcessingOperator.CompleteAsync">
            <summary>
            Set request completed without any result content
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.Processor.IWebCallReporter">
            <summary>
            Reports about web calls
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.IWebCallReporter.Report``1(MyLab.ApiClient.CallDetails{``0})">
            <summary>
            Reports about web call
            </summary>
        </member>
        <member name="T:MyLab.AsyncProcessor.Sdk.Processor.IWebCallReporterFactory">
            <summary>
            Creates web call reporters
            </summary>
        </member>
        <member name="M:MyLab.AsyncProcessor.Sdk.Processor.IWebCallReporterFactory.Create``1">
            <summary>
            Create web call reporters
            </summary>
        </member>
    </members>
</doc>
